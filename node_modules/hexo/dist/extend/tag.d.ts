import { Environment } from 'nunjucks';
import Promise from 'bluebird';
interface TagFunction {
    (args: any[], content: string): string;
}
type RegisterOptions = {
    async?: boolean;
    ends?: boolean;
};
declare class Tag {
    env: Environment;
    source: string;
    constructor();
    register(name: string, fn: TagFunction): void;
    register(name: string, fn: TagFunction, ends: boolean): void;
    register(name: string, fn: TagFunction, options: RegisterOptions): void;
    unregister(name: string): void;
    render(str: string, options?: {
        source?: string;
    }, callback?: NodeJSLikeCallback<any>): Promise<any>;
}
export = Tag;
